C51 COMPILER V9.60.0.0   MAIN                                                              05/21/2022 15:20:15 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\MDK5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.ls
                    -t) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          #define uint unsigned int                                                 //对数据类型进行声明定义
   4          #define uchar unsigned char
   5          
   6          sbit LSA=P2^4;
   7          sbit LSB=P2^5;
   8          sbit LSC=P2^6;
   9          sbit LSD=P2^7;
  10          
  11          uchar DT_s = 0;                                                           //秒计时
  12          uchar DT_min = 0;                                                                         //分计时
  13          
  14          /************************************************
  15          函数名                          ：delay1ms
  16          函数功能            ：t=1，大约延时1ms
  17          ************************************************/
  18          void delay(unsigned int i)
  19          {
  20   1              while(i--);     
  21   1      }
  22          void smg(unsigned char x,y)
  23          {
  24   1               unsigned char a[17]={~0x3f,~0x06,~0x5b,~0x4f,~0x66,~0x6d,~0x7d,~0x07,~0x7f,~0x6f,~0x77,~0x7c,~0x39,~0x5e
             -,~0x79,~0x71};//段选
  25   1               switch(x)
  26   1               {
  27   2                case 1:LSA=0;LSB=1;LSC=1;LSD=1;break;//位选
  28   2                case 2:LSA=1;LSB=0;LSC=1;LSD=1;break;
  29   2                case 3:LSA=1;LSB=1;LSC=0;LSD=1;break;
  30   2                case 4:LSA=1;LSB=1;LSC=1;LSD=0;break;
  31   2               }
  32   1               P0=a[y];
  33   1               delay(100);
  34   1      }
  35          void smg1(unsigned char x,y)//末尾加上小数点
  36          {
  37   1               unsigned char a[17]={~0x3f&0x7f,~0x06&0x7f,~0x5b&0x7f,~0x4f&0x7f,~0x66&0x7f,~0x6d&0x7f,~0x7d&0x7f,~0x07&
             -0x7f,~0x7f&0x7f,~0x6f&0x7f,~0x77&0x7f,~0x7c&0x7f,~0x39&0x7f,~0x5e&0x7f,~0x79&0x7f,~0x71&0x7f};//段选且加上小数点
  38   1               switch(x)
  39   1               {
  40   2                case 1:LSA=0;LSB=1;LSC=1;LSD=1;break;//位选
  41   2                case 2:LSA=1;LSB=0;LSC=1;LSD=1;break;
  42   2                case 3:LSA=1;LSB=1;LSC=0;LSD=1;break;
  43   2                case 4:LSA=1;LSB=1;LSC=1;LSD=0;break;
  44   2               }
  45   1               P0=a[y];
  46   1               delay(100);
  47   1      }
  48          /************************************************
  49          函数名                          ：Timer0Init
  50          函数功能                        :定时/计数器0中断初始化
  51          *************************************************/
  52          void Timer0Init()
C51 COMPILER V9.60.0.0   MAIN                                                              05/21/2022 15:20:15 PAGE 2   

  53          {
  54   1              TMOD = 0x01;            //选择T0定时/计数器，工作在方式1，16位计数器            
  55   1              TH0 = 0xFC;                     //计数初始值，计数从64536开始，计1000个数，完成一次计数，时间为1ms
  56   1              TL0 = 0x18;             
  57   1              ET0 = 1;                        //定时/计数器0中断允许位
  58   1              EA = 1;                         //总中断
  59   1      }
  60          
  61          /************************************************
  62          函数名                          ：S3
  63          函数功能                        ：按下按钮S3时，秒表归零
  64          *************************************************/
  65          void S3()
  66          {
  67   1              DT_s = 0;                       //秒归零
  68   1              DT_min = 0;                     //分归零
  69   1              TR0 = 0;                        //运行控制位清0，关闭定时器
  70   1      }
  71          //读取按键
  72          uchar key_scanf()
  73          {
  74   1         static int Key_on_off = 0 ;//按键自锁变量
  75   1         uchar  num , temp ;
  76   1         num = P3 ;            ///将P2的值存在变量num中
  77   1         num &= 0xf0 ;        //将低四位清0
  78   1         if(num != 0xf0)
  79   1         {
  80   2                if(Key_on_off == 0)
  81   2                {
  82   3                       Key_on_off = 1 ;
  83   3                       switch(num)
  84   3                       {
  85   4                              //返回按键的编码
  86   4                              case 0xe0 : temp = 1 ; break ; 
  87   4                              case 0xd0 : temp = 2 ; break ; 
  88   4                              case 0xb0 : temp = 3 ; break ; 
  89   4                              case 0x70 : temp = 4 ; break ; 
  90   4                       }
  91   3                }   
  92   2         }
  93   1         else
  94   1               Key_on_off = 0 ;
  95   1       
  96   1              return temp  ;
  97   1      }
  98          void DisplayKey()
  99          {
 100   1              int key;
 101   1              key=key_scanf();
 102   1              if(key)  //确认按键被按下
 103   1              {
 104   2                      switch(key)
 105   2                      {
 106   3                              case 1:                           //S1（P3^2）被按下
 107   3                                                      TR0 = 1;          //定时器0运行控制位为1，启动定时器0
 108   3                                                      break;
 109   3                              case 2:                           //S2（P3^1）被按下
 110   3                                                      TR0 = 0;          //定时器0运行控制位为0，关闭定时器0
 111   3                                                      break;
 112   3                              case 3:                           //S3（P3^3）被按下
 113   3                                                      S3();
 114   3                                                      break;
C51 COMPILER V9.60.0.0   MAIN                                                              05/21/2022 15:20:15 PAGE 3   

 115   3                      }
 116   2              }
 117   1      }
 118          /*******************************************************************
 119          函数名                          ：DigDisplay
 120          函数功能                        ：数码管动态扫描函数，循环扫描8个数码管显示
 121          ********************************************************************/
 122          void DigDisplay(uchar s,uchar min)
 123          {
 124   1              smg(4,s%10);
 125   1              smg(3,s/10);
 126   1              smg1(2,min%10);
 127   1              smg(1,min/10);
 128   1      }
 129          
 130          /**********************************************************
 131          函数名                          ：主函数
 132          函数功能                        ：无
 133          **********************************************************/
 134          void main(void)
 135          {
 136   1              P0 = 0x00;                //读端口前写1
 137   1              P3 = 0xFF;                //读端口前写1
 138   1              Timer0Init();     //定时器中断初始化函数
 139   1              while(1)
 140   1              {
 141   2                      DisplayKey();
 142   2                      DigDisplay(DT_s,DT_min);           //数码管显示函数
 143   2              }
 144   1      }
 145          
 146          /**********************************************************
 147          函数名                          ：Timer0
 148          函数功能                        ：定时器计数
 149          **********************************************************/
 150          void Timer0() interrupt 1
 151          {
 152   1              static uint count_s;    
 153   1              static uint count_min;          
 154   1              TH0 = 0xFC;                             //计数值初始化，从64536开始计数，计满时为65536，溢出时即为 1ms
 155   1              TL0 = 0x18;
 156   1              count_s++;                               //秒计数
 157   1              count_min++;                             //分计数
 158   1              if(count_s==1000)                        //计数到1s时，秒计数器开始工作
 159   1              {
 160   2                      count_s = 0;             //秒计数清零
 161   2                      DT_s++;                  //显示秒计数值自增
 162   2                      if(DT_s>59)              //秒数最大为59
 163   2                      {
 164   3                              DT_s = 0;
 165   3                      }
 166   2              }
 167   1              if(count_min==60000)              //计数到60000ms时，秒计数器开始工作
 168   1              {
 169   2                      count_min = 0;            //分计数清零
 170   2                      DT_min++;                                 //显示分计数值自增
 171   2                      if(DT_min>59)                     //分数最大为59
 172   2                      {
 173   3                              DT_min = 0;
 174   3                      }
 175   2              }
 176   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              05/21/2022 15:20:15 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    536    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
