C51 COMPILER V9.59.0.0   IR                                                                02/20/2022 16:56:28 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: E:\SCM\keil 4\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.
                    -lst) OBJECT(.\Objects\IR.obj)

line level    source

   1          #include "reg52.h"
   2          #include "Timer0.h"
   3          #include "Int0.h"
   4          
   5          unsigned int IR_Time;
   6          unsigned char IR_State;
   7          
   8          unsigned char IR_Data[4];
   9          unsigned char IR_pData;
  10          
  11          unsigned char IR_DataFlag;
  12          unsigned char IR_RepeatFlag;
  13          unsigned char IR_Address;
  14          unsigned char IR_Command;
  15          
  16          void IR_Init(void)
  17          {
  18   1              Timer0Init();
  19   1              Int0_Init();
  20   1      }
  21           
  22          unsigned char IR_GetDataFlag(void)
  23          {
  24   1              if(IR_DataFlag)
  25   1              {
  26   2                      IR_DataFlag=0;
  27   2                      return 1;
  28   2              }
  29   1              return 0;
  30   1      }
  31          
  32          unsigned char IR_GetRepeatFlag(void)
  33          {
  34   1              if(IR_RepeatFlag)
  35   1              {
  36   2                      IR_RepeatFlag=0;
  37   2                      return 1;
  38   2              }
  39   1              return 0;
  40   1      }
  41          
  42          unsigned char IR_GetAddress(void)
  43          {
  44   1              return IR_Address;
  45   1      }
  46          
  47          unsigned char IR_GetCommand(void)
  48          {
  49   1              return IR_GetCommand;
  50   1      }
  51          
  52          void Int0_Routine(void) interrupt 0
  53          {
  54   1              if(IR_State==0)
C51 COMPILER V9.59.0.0   IR                                                                02/20/2022 16:56:28 PAGE 2   

  55   1              {
  56   2                      Timer0_SetCounter(0);
  57   2                      Timer0_Run(1);
  58   2                      IR_State=1;
  59   2              }
  60   1              else if(IR_State==1)
  61   1              {
  62   2                      IR_Time=Timer0_GetCounter();
  63   2                      Timer0_SetCounter(0);
  64   2                      if(IR_Time>13500-500 && IR_Time<13500+500)
  65   2                      {
  66   3                              IR_State=2;
  67   3                      }
  68   2                      else if(IR_Time>11250-500 && IR_Time<11250+500)
  69   2                      {
  70   3                              IR_RepeatFlag=1;
  71   3                              Timer0_Run(0);
  72   3                              IR_State=0;
  73   3                      }
  74   2                      else
  75   2                      {
  76   3                              IR_State=1;
  77   3                      }
  78   2              }
  79   1              else if(IR_State==2)
  80   1              {
  81   2                      IR_Time=Timer0_GetCounter();
  82   2                      Timer0_SetCounter(0);
  83   2                      if(IR_Time>1120-500 && IR_Time<1120+500)
  84   2                      {
  85   3                              IR_Data[IR_pData/8]&=~(0x01<<(IR_pData%8));
  86   3                              IR_pData++;
  87   3                      }
  88   2                      else if(IR_Time>2250-500 && IR_Time<2250+500)
  89   2                      {
  90   3                              IR_Data[IR_pData/8]|=(0x01<<(IR_pData%8));
  91   3                              IR_pData++;
  92   3                      }
  93   2                      else
  94   2                      {
  95   3                              IR_pData=0;
  96   3                              IR_State=1;
  97   3                      }
  98   2                      if(IR_pData>=32)
  99   2                      {
 100   3                              IR_pData=0;
 101   3                              if((IR_Data[0]==~IR_Data[1]) && (IR_Data[2] == ~IR_Data[3]))
 102   3                              {
 103   4                                      IR_Address=IR_Data[0];
 104   4                                      IR_Command=IR_Data[2];
 105   4                                      IR_DataFlag=1;
 106   4                              }
 107   3                              Timer0_Run(0);
 108   3                              IR_State=0;
 109   3                      }
 110   2              }
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    372    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.59.0.0   IR                                                                02/20/2022 16:56:28 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
