C51 COMPILER V9.59.0.0   MAIN                                                              01/21/2022 19:47:43 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\SCM\keil 4\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\m
                    -ain.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>    //包含单片机寄存器的头文件
   2          #include<intrins.h>  //包含_nop_()函数定义的头文件
   3          //ADC0832端口引脚定义
   4          sbit CS=P3^0;       //将CS位定义为P3.4引脚
   5          sbit CLK=P3^6;      //将CLK位定义为P1.0引脚
   6          sbit DIO=P3^7;       //将DIO位定义为P1.1引脚
   7          //全局变量声明
   8          unsigned char code digit[10]={"0123456789"};   //定义字符数组显示数字
   9          unsigned char code Str[]={"Volt="};            //说明显示的是电压
  10          
  11          //液晶端口定义
  12          sbit RS=P2^0;           //寄存器选择位，将RS位定义为P2.0引脚
  13          sbit RW=P2^1;           //读写选择位，将RW位定义为P2.1引脚
  14          sbit E=P2^2;            //使能信号位，将E位定义为P2.2引脚
  15          sbit BF=P0^7;           //忙碌标志位，，将BF位定义为P0.7引脚
  16          /*****************************************************
  17          函数功能：延时1ms
  18          (3j+2)*i=(3×33+2)×10=1010(微秒)，可以认为是1毫秒
  19          ***************************************************/
  20          void delay1ms()
  21          {
  22   1         unsigned char i,j; 
  23   1        for(i=0;i<10;i++)
  24   1         for(j=0;j<33;j++)
  25   1          ;   
  26   1       }
  27          /*****************************************************
  28          函数功能：延时若干毫秒
  29          入口参数：n
  30          ***************************************************/
  31           void delaynms(unsigned char n)
  32           {
  33   1         unsigned char i;
  34   1       for(i=0;i<n;i++)
  35   1          delay1ms();
  36   1       }
  37          /*****************************************************
  38          函数功能：判断液晶模块的忙碌状态
  39          返回值：result。result=1，忙碌;result=0，不忙
  40          ***************************************************/
  41          bit BusyTest(void)
  42            {
  43   1          bit result;
  44   1       RS=0;       //根据规定，RS为低电平，RW为高电平时，可以读状态
  45   1          RW=1;
  46   1          E=1;        //E=1，才允许读写
  47   1          _nop_();   //空操作
  48   1          _nop_();
  49   1          _nop_(); 
  50   1          _nop_();   //空操作四个机器周期，给硬件反应时间 
  51   1          result=BF;  //将忙碌标志电平赋给result
  52   1         E=0;         //将E恢复低电平
  53   1         return result;
  54   1        }
C51 COMPILER V9.59.0.0   MAIN                                                              01/21/2022 19:47:43 PAGE 2   

  55          /*****************************************************
  56          函数功能：将模式设置指令或显示地址写入液晶模块
  57          入口参数：dictate
  58          ***************************************************/
  59          void WriteInstruction (unsigned char dictate)
  60          {   
  61   1          while(BusyTest()==1);   //如果忙就等待
  62   1        RS=0;                  //根据规定，RS和R/W同时为低电平时，可以写入指令
  63   1        RW=0;   
  64   1        E=0;                   //E置低电平(根据表8-6，写指令时，E为高脉冲，
  65   1                                 // 就是让E从0到1发生正跳变，所以应先置"0"
  66   1        _nop_();
  67   1        _nop_();               //空操作两个机器周期，给硬件反应时间
  68   1        P0=dictate;            //将数据送入P0口，即写入指令或地址
  69   1        _nop_();
  70   1        _nop_();
  71   1        _nop_();
  72   1        _nop_();               //空操作四个机器周期，给硬件反应时间
  73   1        E=1;                   //E置高电平
  74   1        _nop_();
  75   1        _nop_();
  76   1        _nop_();
  77   1        _nop_();               //空操作四个机器周期，给硬件反应时间
  78   1         E=0;                  //当E由高电平跳变成低电平时，液晶模块开始执行命令
  79   1       }
  80          /*****************************************************
  81          函数功能：指定字符显示的实际地址
  82          入口参数：x
  83          ***************************************************/
  84           void WriteAddress(unsigned char x)
  85           {
  86   1           WriteInstruction(x|0x80); //显示位置的确定方法规定为"80H+地址码x"
  87   1       }
  88          /*****************************************************
  89          函数功能：将数据(字符的标准ASCII码)写入液晶模块
  90          入口参数：y(为字符常量)
  91          ***************************************************/
  92           void WriteData(unsigned char y)
  93           {
  94   1          while(BusyTest()==1);  
  95   1         RS=1;           //RS为高电平，RW为低电平时，可以写入数据
  96   1         RW=0;
  97   1         E=0;            //E置低电平(根据表8-6，写指令时，E为高脉冲，
  98   1                           // 就是让E从0到1发生正跳变，所以应先置"0"
  99   1         P0=y;           //将数据送入P0口，即将数据写入液晶模块
 100   1         _nop_();
 101   1         _nop_();
 102   1          _nop_();
 103   1           _nop_();       //空操作四个机器周期，给硬件反应时间
 104   1         E=1;           //E置高电平
 105   1         _nop_();
 106   1         _nop_();
 107   1         _nop_();
 108   1        _nop_();        //空操作四个机器周期，给硬件反应时间
 109   1        E=0;            //当E由高电平跳变成低电平时，液晶模块开始执行命令
 110   1       }
 111          /*****************************************************
 112          函数功能：对LCD的显示模式进行初始化设置
 113          ***************************************************/
 114          void LcdInitiate(void)
 115          {
 116   1          delaynms(15);               //延时15ms，首次写指令时应给LCD一段较长的反应时间
C51 COMPILER V9.59.0.0   MAIN                                                              01/21/2022 19:47:43 PAGE 3   

 117   1          WriteInstruction(0x38);     //显示模式设置：16×2显示，5×7点阵，8位数据接口
 118   1       delaynms(5);                //延时5ms　，给硬件一点反应时间
 119   1          WriteInstruction(0x38);
 120   1       delaynms(5);               //延时5ms　，给硬件一点反应时间
 121   1       WriteInstruction(0x38);     //连续三次，确保初始化成功
 122   1       delaynms(5);               //延时5ms　，给硬件一点反应时间
 123   1       WriteInstruction(0x0c);     //显示模式设置：显示开，无光标，光标不闪烁
 124   1       delaynms(5);               //延时5ms　，给硬件一点反应时间
 125   1       WriteInstruction(0x06);     //显示模式设置：光标右移，字符不移
 126   1       delaynms(5);                //延时5ms　，给硬件一点反应时间
 127   1       WriteInstruction(0x01);     //清屏幕指令，将以前的显示内容清除
 128   1       delaynms(5);             //延时5ms　，给硬件一点反应时间
 129   1       }
 130          
 131          /*****************************************************
 132          函数功能：显示电压符号
 133          ***************************************************/   
 134          void display_volt(void)
 135           {
 136   1          unsigned char i;
 137   1        WriteAddress(0x03);    //写显示地址，将在第2行第1列开始显示
 138   1        i = 0;                //从第一个字符开始显示
 139   1        while(Str[i] != '\0')  //只要没有写到结束标志，就继续写
 140   1         {      
 141   2         WriteData(Str[i]);   //将字符常量写入LCD
 142   2         i++;                 //指向下一个字符    
 143   2        } 
 144   1      }
 145          /*****************************************************
 146          函数功能：显示电压的小数点
 147          ***************************************************/   
 148          void  display_dot(void)
 149          {         
 150   1        WriteAddress(0x09);   //写显示地址，将在第1行第10列开始显示     
 151   1        WriteData('.');       //将小数点的字符常量写入LCD  
 152   1      }
 153          /*****************************************************
 154          函数功能：显示电压的单位(V)
 155          ***************************************************/   
 156          void  display_V(void)
 157          {
 158   1          WriteAddress(0x0c); //写显示地址，将在第2行第13列开始显示 
 159   1        WriteData('V');     //将字符常量写入LCD   
 160   1         
 161   1      }
 162          /*****************************************************
 163          函数功能：显示电压的整数部分
 164          入口参数：x
 165          ***************************************************/ 
 166          void display1(unsigned char x)
 167          {
 168   1       WriteAddress(0x08);    //写显示地址,将在第2行第7列开始显示
 169   1       WriteData(digit[x]);    //将百位数字的字符常量写入LCD
 170   1       }
 171          /*****************************************************
 172          函数功能：显示电压的小数数部分
 173          入口参数：x
 174          ***************************************************/ 
 175           void display2(unsigned char x)
 176          {
 177   1        unsigned char i,j;
 178   1       i=x/10;            //取十位（小数点后第一位）
C51 COMPILER V9.59.0.0   MAIN                                                              01/21/2022 19:47:43 PAGE 4   

 179   1       j=x%10;            //取个位（小数点后第二位）
 180   1         WriteAddress(0x0a);      //写显示地址,将在第1行第11列开始显示
 181   1       WriteData(digit[i]);     //将小数部分的第一位数字字符常量写入LCD
 182   1       WriteData(digit[j]);     //将小数部分的第一位数字字符常量写入LCD
 183   1      }
 184          /*****************************************************
 185          函数功能：将模拟信号转换成数字信号
 186          ***************************************************/ 
 187          unsigned char  A_D()
 188          {
 189   1        unsigned char i,dat;
 190   1         CS=1;   //一个转换周期开始
 191   1         CLK=0;  //为第一个脉冲作准备
 192   1         CS=0;  //CS置0，片选有效
 193   1         DIO=1;    //DIO置1，规定的起始信号  
 194   1         CLK=1;   //第一个脉冲
 195   1         CLK=0;   //第一个脉冲的下降沿，此前DIO必须是高电平
 196   1         DIO=1;   //DIO置1， 通道选择信号  
 197   1         CLK=1;   //第二个脉冲，第2、3个脉冲下沉之前，DI必须跟别输入两位数据用于选择通道，这里选通道CH0 
 198   1         CLK=0;   //第二个脉冲下降沿
 199   1          
 200   1         DIO=0;   //DI置0，选择通道0
 201   1         CLK=1;    //第三个脉冲
 202   1         CLK=0;    //第三个脉冲下降沿
 203   1         DIO=1;    //第三个脉冲下沉之后，输入端DIO失去作用，应置1
 204   1         CLK=1;    //第四个脉冲
 205   1         for(i=0;i<8;i++)  //高位在前
 206   1          {
 207   2            CLK=1;         //第四个脉冲
 208   2            CLK=0; 
 209   2            dat<<=1;       //将下面储存的低位数据向右移
 210   2         dat|=(unsigned char)DIO;   //将输出数据DIO通过或运算储存在dat最低位 
 211   2          }             
 212   1          CS=1;          //片选无效 
 213   1        return dat;  //将读书的数据返回     
 214   1        }
 215          /*****************************************************
 216          函数功能：主函数
 217          ***************************************************/ 
 218          main(void)
 219          {
 220   1        unsigned int AD_val;    //储存A/D转换后的值
 221   1        unsigned char Int,Dec;   //分别储存转换后的整数部分与小数部分
 222   1         LcdInitiate();         //将液晶初始化
 223   1         delaynms(5);           //延时5ms给硬件一点反应时间 
 224   1       display_volt();        //显示温度说明
 225   1         display_dot();         //显示温度的小数点
 226   1         display_V();           //显示温度的单位
 227   1         while(1)
 228   1            {
 229   2          AD_val= A_D();    //进行A/D转换
 230   2          Int=(AD_val)/51;  //计算整数部分
 231   2          Dec=(AD_val%51)*100/51;    //计算小数部分
 232   2              display1(Int);     //显示整数部分
 233   2          display2(Dec);     //显示小数部分
 234   2          delaynms(250);     //延时250ms
 235   2        }
 236   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    409    ----
C51 COMPILER V9.59.0.0   MAIN                                                              01/21/2022 19:47:43 PAGE 5   

   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
