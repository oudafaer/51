C51 COMPILER V9.60.0.0   IR                                                                04/13/2022 16:41:01 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: E:\MDK5\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.lst) O
                    -BJECT(.\Objects\IR.obj)

line level    source

   1          #include <reg52.H>
   2          #include "Timer0.h"
   3          #include "Int0.h"
   4          
   5          unsigned int IR_Time;
   6          unsigned char IR_State;
   7          
   8          unsigned char IR_Data[4];
   9          unsigned char IR_pData;
  10          
  11          unsigned char IR_DataFlag;
  12          unsigned char IR_RepeatFlag;
  13          unsigned char IR_Address;
  14          unsigned char IR_Command;
  15          
  16          // 红外遥控初始化
  17          void IR_Init(void)
  18          {
  19   1              Timer0Init();
  20   1              Int0_Init();
  21   1      }
  22          
  23          //红外遥控获取收到数据帧标志位
  24          unsigned char IR_GetDataFlag(void)
  25          {
  26   1              if(IR_DataFlag)
  27   1              {
  28   2                      IR_DataFlag=0;
  29   2                      return 1;
  30   2              }
  31   1              return 0;
  32   1      }
  33          
  34          //红外遥控获取收到连发帧标志位
  35          unsigned char IR_GetRepeatFlag(void)
  36          {
  37   1              if(IR_RepeatFlag)
  38   1              {
  39   2                      IR_RepeatFlag=0;
  40   2                      return 1;
  41   2              }
  42   1              return 0;
  43   1      }
  44          //红外遥控获取收到的地址数据
  45          unsigned char IR_GetAddress(void)
  46          {
  47   1              return IR_Address;
  48   1      }
  49          
  50          //红外遥控获取收到的命令数据
  51          
  52          unsigned char IR_GetCommand(void)
  53          {
  54   1              return IR_Command;
C51 COMPILER V9.60.0.0   IR                                                                04/13/2022 16:41:01 PAGE 2   

  55   1      }
  56          
  57          //外部中断0中断函数，下降沿触发执行
  58          void Int0_Routine(void) interrupt 0
  59          {
  60   1              if(IR_State==0)                         //状态0，空闲状态
  61   1              {
  62   2                      Timer0_SetCounter(0);   //定时计数器清0
  63   2                      Timer0_Run(1);                  //定时器启动
  64   2                      IR_State=1;                             //置状态为1
  65   2              }
  66   1              else if(IR_State==1)            //状态1，等待Start信号或Repeat信号
  67   1              {
  68   2                      IR_Time=Timer0_GetCounter();    //获取上一次中断到此次中断的时间
  69   2                      Timer0_SetCounter(0);   //定时计数器清0
  70   2                      //如果计时为13.5ms，则接收到了Start信号
  71   2                      if(IR_Time>12442-500 && IR_Time<12442+500)
  72   2                      {
  73   3                              IR_State=2;                     //置状态为2
  74   3                      }
  75   2                      //如果计时为11.25ms，则接收到了Repeat信号
  76   2                      else if(IR_Time>10368-500 && IR_Time<10368+500)
  77   2                      {
  78   3                              IR_RepeatFlag=1;        //置收到连发帧标志位为1
  79   3                              Timer0_Run(0);          //定时器停止
  80   3                              IR_State=0;                     //置状态为0
  81   3                      }
  82   2                      else                                    //接收出错
  83   2                      {
  84   3                              IR_State=1;                     //置状态为1
  85   3                      }
  86   2              }
  87   1              else if(IR_State==2)            //状态2，接收数据
  88   1              {
  89   2                      IR_Time=Timer0_GetCounter();    //获取上一次中断到此次中断的时间
  90   2                      Timer0_SetCounter(0);   //定时计数器清0
  91   2                      if(IR_Time>1032-500 && IR_Time<1032+500)
  92   2                      {
  93   3                              IR_Data[IR_pData/8]&=~(0x01<<(IR_pData%8));     //数据对应位清0
  94   3                              IR_pData++;                     //数据位置指针自增
  95   3                      }
  96   2                      //如果计时为2250us，则接收到了数据1
  97   2                      else if(IR_Time>2074-500 && IR_Time<2074+500)
  98   2                      {
  99   3                              IR_Data[IR_pData/8]|=(0x01<<(IR_pData%8));      //数据对应位置1
 100   3                              IR_pData++;                     //数据位置指针自增
 101   3                      }
 102   2                      else                                    //接收出错
 103   2                      {
 104   3                              IR_pData=0;                     //数据位置指针清0
 105   3                              IR_State=1;                     //置状态为1
 106   3                      }
 107   2                      if(IR_pData>=32)                //如果接收到了32位数据
 108   2                      {
 109   3                              IR_pData=0;                     //数据位置指针清0
 110   3                              if((IR_Data[0]==~IR_Data[1]) && (IR_Data[2]==~IR_Data[3]))      //数据验证
 111   3                              {
 112   4                                      IR_Address=IR_Data[0];  //转存数据
 113   4                                      IR_Command=IR_Data[2];
 114   4                                      IR_DataFlag=1;  //置收到连发帧标志位为1
 115   4                              }
 116   3                              Timer0_Run(0);          //定时器停止
C51 COMPILER V9.60.0.0   IR                                                                04/13/2022 16:41:01 PAGE 3   

 117   3                              IR_State=0;                     //置状态为0
 118   3                      }
 119   2              }
 120   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    372    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
