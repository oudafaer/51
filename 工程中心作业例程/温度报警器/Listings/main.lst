C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2021 20:47:22 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\SCM\keil 4\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\m
                    -ain.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #define uint unsigned int
   3          #define uchar unsigned char           //宏定义
   4          sbit SET = P3^1;                            //定义调整键
   5          sbit DEC = P3^2;                           //定义减少键
   6          sbit ADD = P3^3;                          //定义增加键
   7          sbit BEEP = P3^6;                           //定义蜂鸣器
   8          sbit ALAM = P1^2;                        //定义灯光报警
   9          sbit DQ = P3^7;                             //定义DS18B20总线I/O        
  10          bit shanshuo_st;                            //闪烁间隔标志
  11          bit beep_st;                                     //蜂鸣器间隔标志
  12          sbit DIAN = P0^5;                        //小数点
  13          uchar x=0;                                      //计数器
  14          signed char m;                                     //温度值全局变量
  15          uchar n;                                              //温度值全局变量
  16          uchar set_st=0;                             //状态标志
  17          signed char shangxian=30;                  //上限报警温度
  18          signed char xiaxian=10;                   //下限报警温度
  19          //uchar code  LEDData[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0xff};
  20          uchar code  LEDData[]={0x5F,0x44,0x9D,0xD5,0xC6,0xD3,0xDB,0x47,0xDF,0xD7,0xCF,0xDA,0x9B,0xDC,0x9B,0x8B};
  21          
  22          //延时子程序
  23          void Delay_DS18B20(int num)
  24          {
  25   1        while(num--) ;
  26   1      }
  27          //初始化DS18B20
  28          void Init_DS18B20(void)
  29          {
  30   1        unsigned char x=0;
  31   1        DQ = 1;         //DQ复位
  32   1        Delay_DS18B20(8);    //稍做延时
  33   1        DQ = 0;         //单片机将DQ拉低
  34   1        Delay_DS18B20(80);   //精确延时，大于480us
  35   1        DQ = 1;         //拉高总线
  36   1        Delay_DS18B20(14);
  37   1        x = DQ;           //稍做延时后，如果x=0则初始化成功，x=1则初始化失败
  38   1        Delay_DS18B20(20);
  39   1      }
  40          //读一个字节
  41          unsigned char ReadOneChar(void)
  42          {
  43   1        unsigned char i=0;
  44   1        unsigned char dat = 0;
  45   1        for (i=8;i>0;i--)
  46   1        {
  47   2          DQ = 0;     // 给脉冲信号
  48   2          dat>>=1;
  49   2          DQ = 1;     // 给脉冲信号
  50   2          if(DQ)
  51   2          dat|=0x80;
  52   2          Delay_DS18B20(4);
  53   2        }
  54   1        return 0;
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2021 20:47:22 PAGE 2   

  55   1      }
  56          //写一个字节
  57          void WriteOneChar(unsigned char dat)
  58          {
  59   1        unsigned char i=0;
  60   1        for (i=8; i>0; i--)
  61   1        {
  62   2          DQ = 0;
  63   2          DQ = dat&0x01;
  64   2          Delay_DS18B20(5);
  65   2          DQ = 1;
  66   2          dat>>=1;
  67   2        }
  68   1      }
  69          //读取温度
  70          unsigned int ReadTemperature(void)
  71          {
  72   1        unsigned char a=0;
  73   1        unsigned char b=0;
  74   1        unsigned int t=0;
  75   1        float tt=0;
  76   1        Init_DS18B20();
  77   1        WriteOneChar(0xCC);  //跳过读序号列号的操作
  78   1        WriteOneChar(0x44);  //启动温度转换
  79   1        Init_DS18B20();
  80   1        WriteOneChar(0xCC);  //跳过读序号列号的操作
  81   1        WriteOneChar(0xBE);  //读取温度寄存器
  82   1        a=ReadOneChar();     //读低8位
  83   1        b=ReadOneChar();    //读高8位
  84   1        t=b;                                   //高8位转移到t
  85   1        t<<=8;                           //t数据左移8位
  86   1        t=t|a;                           //将t和a按位或，得到一个16位的数
  87   1        tt=t*0.0625;                   //将t乘以0.0625得到实际温度值（温度传感器设置12位精度，最小分辨率是0.0625
             -）
  88   1        t= tt*10+0.5;     //放大10倍（将小数点后一位显示出来）输出并四舍五入
  89   1        return(t);                   //返回温度值
  90   1      }
  91          
  92          //延时子程序
  93          void Delay(uint num)
  94          {
  95   1      while( --num );
  96   1      }
  97          //初始化定时器0
  98          void InitTimer(void)
  99          {
 100   1              TMOD=0x1;
 101   1              TH0=0x3c;
 102   1              TL0=0xb0;     //50ms（晶振12M）
 103   1      }
 104          
 105          //读取温度
 106          void check_wendu(void)
 107          {
 108   1              uint a,b,c;
 109   1              c=ReadTemperature();                          //获取温度值
 110   1              a=c/100;                                                     //计算得到十位数字
 111   1              b=c/10-a*10;                                            //计算得到个位数字
 112   1              m=c/10;                                                      //计算得到整数位
 113   1              n=c-a*100-b*10;                                    //计算得到小数位
 114   1              if(m<0){m=0;n=0;}                                   //设置温度显示上限
 115   1              if(m>99){m=99;n=9;}                                   //设置温度显示上限   
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2021 20:47:22 PAGE 3   

 116   1      }
 117          //数码管初始化
 118          void Disp_init(void)   
 119          {
 120   1              P0 = ~0x80;      //显示----
 121   1              P2 = 0x7F;
 122   1              Delay(200);
 123   1              P2 = 0xDF;
 124   1              Delay(200);   
 125   1              P2 = 0xF7;
 126   1              Delay(200);
 127   1              P2 = 0xFD;
 128   1              Delay(200);
 129   1              P2 = 0xFF;         //关闭显示
 130   1      }
 131          //显示温度子程序
 132          void Disp_Temperature(void)     //显示温度
 133          {
 134   1              P0 = ~0x98;      //显示C
 135   1              P2 = 0x7F;
 136   1              Delay(100);
 137   1              P2=0xff;
 138   1              P0=~LEDData[n];    //显示个位
 139   1              P2 = 0xDF;
 140   1              Delay(100);
 141   1              P2=0xff;
 142   1              P0 =~LEDData[m%10];    //显示十位
 143   1              DIAN = 0;         //显示小数点
 144   1              P2 = 0xF7;
 145   1              Delay(100);
 146   1              P2=0xff;
 147   1              P0 =~LEDData[m/10];    //显示百位
 148   1              P2 = 0xFD;
 149   1              Delay(100);
 150   1              P2 = 0xff;         //关闭显示
 151   1      }
 152          //显示报警温度子程序
 153          void Disp_alarm(uchar baojing)
 154          {
 155   1              P0 =~0x98;      //显示C
 156   1              P2 = 0x7F;
 157   1              Delay(100);
 158   1              P2=0xff;
 159   1              P0 =~LEDData[baojing%10]; //显示十位
 160   1              P2 = 0xDF;
 161   1              Delay(100);
 162   1              P2=0xff;
 163   1              P0 =~LEDData[baojing/10]; //显示百位
 164   1              P2 = 0xF7;
 165   1              Delay(100);
 166   1              P2=0xff;
 167   1              if(set_st==1)P0 =~0xCE;
 168   1              else if(set_st==2)P0 =~0x1A; //上限H、下限L标示
 169   1              P2 = 0xFD;
 170   1              Delay(100);
 171   1              P2 = 0xff;         //关闭显示
 172   1      }
 173          //报警子程序
 174          void Alarm()
 175          {
 176   1              if(x>=10){beep_st=~beep_st;x=0;}
 177   1              if((m>=shangxian&&beep_st==1)||(m<xiaxian&&beep_st==1))
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2021 20:47:22 PAGE 4   

 178   1              {
 179   2                      BEEP = 0;
 180   2                      ALAM=0;
 181   2              }
 182   1              else
 183   1              {
 184   2                      BEEP=1;
 185   2                      ALAM=1;
 186   2              }
 187   1      }
 188          //主函数
 189          void main(void)
 190          {
 191   1          uint z;
 192   1              InitTimer();    //初始化定时器
 193   1              EA=1;      //全局中断开关
 194   1              TR0=1;
 195   1              ET0=1;      //开启定时器0
 196   1              IT0=1;        
 197   1              IT1=1;
 198   1              check_wendu();
 199   1              check_wendu();
 200   1              for(z=0;z<300;z++)
 201   1              {
 202   2              Disp_init();        
 203   2              }
 204   1              while(1)
 205   1              {
 206   2                if(SET==0)
 207   2                {
 208   3                 Delay(2000);
 209   3                 do{}while(SET==0);
 210   3                 set_st++;x=0;shanshuo_st=1;
 211   3                 if(set_st>2)set_st=0;
 212   3                }
 213   2                if(set_st==0)
 214   2                {
 215   3                 EX0=0;    //关闭外部中断0
 216   3                 EX1=0;    //关闭外部中断1
 217   3                      check_wendu();
 218   3                        Disp_Temperature();
 219   3                 Alarm();   //报警检测
 220   3                }
 221   2                else if(set_st==1)
 222   2                {
 223   3                 BEEP=1;    //关闭蜂鸣器
 224   3                 ALAM=1;
 225   3                 EX0=1;    //开启外部中断0
 226   3                 EX1=1;    //开启外部中断1
 227   3                 if(x>=10){shanshuo_st=~shanshuo_st;x=0;}
 228   3                 if(shanshuo_st) {Disp_alarm(shangxian);}
 229   3                }
 230   2                else if(set_st==2)
 231   2                {
 232   3                 BEEP=1;    //关闭蜂鸣器
 233   3                 ALAM=1;
 234   3                 EX0=1;    //开启外部中断0
 235   3                 EX1=1;    //开启外部中断1
 236   3                 if(x>=10){shanshuo_st=~shanshuo_st;x=0;}
 237   3                 if(shanshuo_st) {Disp_alarm(xiaxian);}
 238   3                }
 239   2              }
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2021 20:47:22 PAGE 5   

 240   1      }
 241          
 242          //定时器0中断服务程序
 243          void timer0(void) interrupt 1
 244          {
 245   1              TH0=0x3c;
 246   1              TL0=0xb0;
 247   1              x++;
 248   1      }
 249          //外部中断0服务程序
 250          void int0(void) interrupt 0
 251          {
 252   1      
 253   1              EX0=0;      //关外部中断0
 254   1              if(DEC==0&&set_st==1)
 255   1              {       
 256   2                do{
 257   3                      Disp_alarm(shangxian);
 258   3              }
 259   2               while(DEC==0);
 260   2                shangxian--;
 261   2                if(shangxian<xiaxian)shangxian=xiaxian;
 262   2              }
 263   1              else if(DEC==0&&set_st==2)
 264   1              {
 265   2                do{
 266   3                      Disp_alarm(xiaxian);
 267   3              }
 268   2               while(DEC==0);
 269   2               xiaxian--;
 270   2                if(xiaxian<0)xiaxian=0;
 271   2              }
 272   1      }
 273          //外部中断1服务程序
 274          void int1(void) interrupt 2
 275          {
 276   1              EX1=0;      //关外部中断1
 277   1              if(ADD==0&&set_st==1)
 278   1              {
 279   2               do{
 280   3                      Disp_alarm(shangxian);
 281   3              }
 282   2               while(ADD==0);
 283   2                shangxian++;
 284   2                if(shangxian>99)shangxian=99;
 285   2              }
 286   1              else if(ADD==0&&set_st==2)
 287   1              {
 288   2                do{
 289   3                      Disp_alarm(xiaxian);
 290   3              }
 291   2               while(ADD==0);
 292   2                xiaxian++;
 293   2                if(xiaxian>shangxian)xiaxian=shangxian;
 294   2              }  
 295   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1096    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   MAIN                                                              12/07/2021 20:47:22 PAGE 6   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
