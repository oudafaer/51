C51 COMPILER V9.54   MAIN                                                                  04/04/2023 20:06:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\MDK5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*******************************************************************************
   2          注意事项：
   3          根据自己使用的LCD1602是否带有转接板，如果带有转接板的即为4位，需在LCD.H头文件中
   4          将宏#define LCD1602_4PINS打开，我们这里使用的LCD1602是8位，所以默认将该宏注释。
   5          
   6          接线说明：（开发攻略每个实验章节内的实验现象都有对应的接线图说明）
   7          LCD1602接线参考LCD1602液晶显示实验接线图
   8          DS18B20传感器接线参考DS18B20温度传感器实验接线图
   9          
  10          
  11          
  12          实验操作：
  13          LCD1602上显示采集的温度，同时
  14          打开串口调试助手，将串口波特率选择4800，打开串口，此时在串口上就会显示采集的温度，串口截图参考文件夹下。
  15          *******************************************************************************/
  16          
  17          #include<reg51.h>
  18          #include"lcd.h"
  19          #include"temp.h"
  20          
  21          uchar CNCHAR[6] = "摄氏度";
  22          void LcdDisplay(int);
  23          void UsartConfiguration();
  24          
  25          /*******************************************************************************
  26          * 函数名         : main
  27          * 函数功能                 : 主函数
  28          * 输入           : 无
  29          * 输出           : 无
  30          *******************************************************************************/
  31          
  32          void main()
  33          {
  34   1              UsartConfiguration();
  35   1              while(1)
  36   1              {
  37   2                      LcdDisplay(Ds18b20ReadTemp());
  38   2                      Delay1ms(1000);//1s钟刷一次
  39   2              }
  40   1      }
  41          
  42          /*******************************************************************************
  43          * 函数名         : LcdDisplay()
  44          * 函数功能                 : LCD显示读取到的温度
  45          * 输入           : v
  46          * 输出           : 无
  47          *******************************************************************************/
  48          
  49          void LcdDisplay(int temp)        //lcd显示
  50          {
  51   1          
  52   1              unsigned char i, datas[] = {0, 0, 0, 0, 0}; //定义数组
  53   1              float tp;  
  54   1              if(temp< 0)                             //当温度值为负数
  55   1              {
C51 COMPILER V9.54   MAIN                                                                  04/04/2023 20:06:15 PAGE 2   

  56   2                
  57   2                      SBUF='-';//将接收到的数据放入到发送寄存器
  58   2                      while(!TI);                              //等待发送数据完成
  59   2                      TI=0;                                            //清除发送完成标志位
  60   2                      //因为读取的温度是实际温度的补码，所以减1，再取反求出原码
  61   2                      temp=temp-1;
  62   2                      temp=~temp;
  63   2                      tp=temp;
  64   2                      temp=tp*0.0625*100+0.5; 
  65   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
  66   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
  67   2                      //算由?.5，还是在小数点后面。
  68   2       
  69   2              }
  70   1              else
  71   1              {                       
  72   2                      SBUF='+';//将接收到的数据放入到发送寄存器
  73   2                      while(!TI);                              //等待发送数据完成
  74   2                      TI=0;                                            //清除发送完成标志位
  75   2                      tp=temp;//因为数据处理有小数点所以将温度赋给一个浮点型变量
  76   2                      //如果温度是正的那么，那么正数的原码就是补码它本身
  77   2                      temp=tp*0.0625*100+0.5; 
  78   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
  79   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
  80   2                      //算加上0.5，还是在小数点后面。
  81   2              }
  82   1              datas[0] = temp / 10000;
  83   1              datas[1] = temp % 10000 / 1000;
  84   1              datas[2] = temp % 1000 / 100;
  85   1              datas[3] = temp % 100 / 10;
  86   1              datas[4] = temp % 10;
  87   1      
  88   1              SBUF = '0'+datas[0];//将接收到的数据放入到发送寄存器
  89   1              while (!TI);                             //等待发送数据完成
  90   1              TI = 0;
  91   1      
  92   1              SBUF = '0'+datas[1];//将接收到的数据放入到发送寄存器
  93   1              while (!TI);                             //等待发送数据完成
  94   1              TI = 0;
  95   1      
  96   1              SBUF = '0'+datas[2];//将接收到的数据放入到发送寄存器
  97   1              while (!TI);                             //等待发送数据完成
  98   1              TI = 0;
  99   1      
 100   1      
 101   1              SBUF = '.';//将接收到的数据放入到发送寄存器
 102   1              while (!TI);                             //等待发送数据完成
 103   1              TI = 0;
 104   1      
 105   1       
 106   1              SBUF = '0'+datas[3];//将接收到的数据放入到发送寄存器
 107   1              while (!TI);                             //等待发送数据完成
 108   1              TI = 0;
 109   1      
 110   1              SBUF = '0'+datas[4];//将接收到的数据放入到发送寄存器
 111   1              while (!TI);                             //等待发送数据完成
 112   1              TI = 0;
 113   1              for(i=0; i<6; i++)
 114   1              {
 115   2                      SBUF = CNCHAR[i];//将接收到的数据放入到发送寄存器
 116   2                      while (!TI);                             //等待发送数据完成
 117   2                      TI = 0;
C51 COMPILER V9.54   MAIN                                                                  04/04/2023 20:06:15 PAGE 3   

 118   2              }
 119   1                      SBUF ='!';//将接收到的数据放入到发送寄存器
 120   1              while (!TI);                             //等待发送数据完成
 121   1              TI = 0;
 122   1      
 123   1               
 124   1      }
 125          /*******************************************************************************
 126          * 函 数 名         :UsartConfiguration()
 127          * 函数功能                 :设置串口
 128          * 输    入         : 无
 129          * 输    出         : 无
 130          *******************************************************************************/
 131          
 132          void UsartConfiguration()
 133          {
 134   1              PCON &= 0x7F;           //波特率不倍速
 135   1              SCON = 0x50;            //8位数据,可变波特率
 136   1              TMOD &= 0x0F;           //清除定时器1模式位
 137   1              TMOD |= 0x20;           //设定定时器1为8位自动重装方式
 138   1              TL1 = 0xFA;             //设定定时初值
 139   1              TH1 = 0xFA;             //设定定时器重装值
 140   1              ET1 = 0;                //禁止定时器1中断
 141   1              TR1 = 1;                //启动定时器1
 142   1              EA=1;
 143   1              ES=1;
 144   1              
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    353    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
