C51 COMPILER V9.60.0.0   OLED                                                              03/12/2022 20:20:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: E:\MDK5\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\oled.ls
                    -t) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"
   3          #include "reg52.h"
   4          
   5          sbit OLED_SCL=P1^0;//时钟 D0SCLK?
   6          sbit OLED_SDIN=P1^1;//D1（MOSI） 数据
   7          
   8          void delay_ma(unsigned int ms)
   9          {
  10   1        unsigned int a;
  11   1        while(ms)
  12   1        {
  13   2          a=1800;
  14   2          while(a--);
  15   2          ms--;
  16   2        }
  17   1        return;
  18   1      }
  19          
  20          //iic start
  21          void IIC_Start()
  22          {
  23   1        OLED_SCL=1;
  24   1        OLED_SDIN=1;
  25   1        OLED_SDIN=0;
  26   1        OLED_SCL=0;
  27   1        
  28   1      }
  29          
  30          void IIC_Stop()
  31          {
  32   1        OLED_SCL=1;
  33   1        OLED_SDIN=0;
  34   1        OLED_SDIN=1;
  35   1      }
  36          
  37          void IIC_Wait_Ack()
  38          {
  39   1        OLED_SCL=1;
  40   1        OLED_SCL=0;
  41   1      }
  42          //iic write byte
  43          void Write_IIC_Byte(unsigned char IIC_Byte)
  44          {
  45   1        unsigned char i;
  46   1        unsigned char m,da;
  47   1        da=IIC_Byte;
  48   1        OLED_SCL=0;
  49   1        for(i=0;i<8;i++)
  50   1        {
  51   2          m=da;
  52   2          m=m&0x80;
  53   2          if(m==0x80)
  54   2          {
C51 COMPILER V9.60.0.0   OLED                                                              03/12/2022 20:20:18 PAGE 2   

  55   3            OLED_SDIN=1;
  56   3          }
  57   2          else OLED_SDIN=0;
  58   2          da=da<<1;
  59   2          OLED_SCL=1;
  60   2          OLED_SCL=0;
  61   2        }
  62   1      }
  63          //iic write command
  64          void Write_IIC_Command(unsigned char IIC_Command)
  65          {
  66   1        IIC_Start();
  67   1        Write_IIC_Byte(0x78);
  68   1        IIC_Wait_Ack();
  69   1        Write_IIC_Byte(0x00);
  70   1        IIC_Wait_Ack();
  71   1        Write_IIC_Byte(IIC_Command);
  72   1        IIC_Wait_Ack();
  73   1        IIC_Stop();
  74   1      }
  75          //iic weite Data
  76          void Write_IIC_Data(unsigned char IIC_Data)
  77          {
  78   1        IIC_Start();
  79   1        Write_IIC_Byte(0x78);
  80   1        IIC_Wait_Ack();
  81   1        Write_IIC_Byte(0x40);
  82   1        IIC_Wait_Ack();
  83   1        Write_IIC_Byte(IIC_Data);
  84   1        IIC_Wait_Ack();
  85   1        IIC_Stop();
  86   1      }
  87          //写命令或数据
  88          void OLED_WR_Byte(unsigned dat,unsigned cmd)
  89          {
  90   1        if(cmd)
  91   1        {
  92   2          Write_IIC_Data(dat);
  93   2        }
  94   1        else
  95   1        {
  96   2          Write_IIC_Command(dat);
  97   2        }
  98   1      }
  99          // 插入图片
 100          void fill_picture(unsigned char fill_Data)
 101          {
 102   1        unsigned char m,n;
 103   1        for(m=0;m<8;m++)
 104   1        {
 105   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 106   2          OLED_WR_Byte(0x00,0);   //low column start address
 107   2          OLED_WR_Byte(0x10,0);   //high column start address
 108   2          for(n=0;n<128;n++)
 109   2            {
 110   3              OLED_WR_Byte(fill_Data,1);
 111   3            }
 112   2        }
 113   1      }
 114          //延时函数
 115          void Delay_50ms(unsigned int Del_50ms)
 116          {
C51 COMPILER V9.60.0.0   OLED                                                              03/12/2022 20:20:18 PAGE 3   

 117   1        unsigned int m;
 118   1        for(;Del_50ms>0;Del_50ms--)
 119   1          for(m=6245;m>0;m--);
 120   1      }
 121          void Delay_1ms(unsigned int Del_1ms)
 122          {
 123   1        unsigned char j;
 124   1        while(Del_1ms--)
 125   1        { 
 126   2          for(j=0;j<123;j++);
 127   2        }
 128   1      }
 129          //坐标设置
 130          void OLED_Set_Pos(unsigned char x,unsigned char y)
 131          {
 132   1        OLED_WR_Byte(0xb0+y,0);
 133   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,0);
 134   1        OLED_WR_Byte((x&0x0f),0);
 135   1      }
 136          //oled显示
 137          void OLED_Open(void)
 138          {
 139   1        OLED_WR_Byte(0X8D,0);  //SET DCDC命令
 140   1        OLED_WR_Byte(0X14,0);  //DCDC ON
 141   1        OLED_WR_Byte(0XAF,0);  //DISPLAY ON
 142   1      }
 143          void OLED_Off(void)
 144          {
 145   1        OLED_WR_Byte(0X8D,0);  //SET DCDC命令
 146   1        OLED_WR_Byte(0X10,0);  //DCDC ON
 147   1        OLED_WR_Byte(0XAF,0);  //DISPLAY ON
 148   1      }
 149          //清屏函数  
 150          void OLED_Clear(void)  
 151          {  
 152   1        unsigned char i,n;        
 153   1        for(i=0;i<8;i++)  
 154   1        {  
 155   2          OLED_WR_Byte (0xb0+i,0);    //设置页地址（0~7）
 156   2          OLED_WR_Byte (0x00,0);      //设置显示位置―列低地址
 157   2          OLED_WR_Byte (0x10,0);      //设置显示位置―列高地址   
 158   2          for(n=0;n<128;n++)
 159   2          {
 160   3            OLED_WR_Byte(0,1); 
 161   3          } 
 162   2        } //更新显示
 163   1      }
 164          //指定位置显示字符
 165          //x:0~27
 166          //y:0~63
 167          //Size:选择字体 16/12
 168          void OLED_ShowChar(unsigned char x,unsigned char y,unsigned char Char,unsigned char Char_Size)
 169          {
 170   1        unsigned char c=0,i=0;
 171   1        c=Char-' ';//得到偏移值
 172   1        if(x>127)
 173   1        {
 174   2          x=0;
 175   2          y=y+2;
 176   2        }
 177   1        if(Char_Size==16)
 178   1        {
C51 COMPILER V9.60.0.0   OLED                                                              03/12/2022 20:20:18 PAGE 4   

 179   2          OLED_Set_Pos(x,y);
 180   2          for(i==0;i<8;i++)
 181   2          OLED_WR_Byte(F8X16[c*16+i],1);
 182   2          OLED_Set_Pos(x,y+1);
 183   2          OLED_WR_Byte(F8X16[c*16+i+8],1);
 184   2        }
 185   1        else
 186   1        {
 187   2          OLED_Set_Pos(x,y);
 188   2          for(i=0;i<8;i++)
 189   2          {
 190   3            OLED_WR_Byte(F6x8[c][i],1);
 191   3          }
 192   2        }
 193   1      }
 194          //m*n函数
 195          unsigned long oled_pow(unsigned char m,unsigned char n)
 196          {
 197   1        unsigned long result=1;
 198   1        while(n--)result*=m;
 199   1        return result;
 200   1      }
 201          //显示两个数字
 202          void OLED_ShowNum(unsigned char x,unsigned char y,unsigned long num,unsigned char len,unsigned char size2)
 203          {           
 204   1        unsigned char t,temp;
 205   1        unsigned char enshow=0;              
 206   1        for(t=0;t<len;t++)
 207   1        {
 208   2          temp=(num/oled_pow(10,len-t-1))%10;
 209   2          if(enshow==0&&t<(len-1))
 210   2          {
 211   3            if(temp==0)
 212   3            {
 213   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 214   4              continue;
 215   4            }else enshow=1; 
 216   3             
 217   3          }
 218   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 219   2        }
 220   1      } 
 221          //显示一个字符号串
 222          void OLED_ShowString(unsigned char x,unsigned char y,unsigned char *chr,unsigned char Char_Size)
 223          {
 224   1        unsigned char j=0;
 225   1        while (chr[j]!='\0')
 226   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 227   2            x+=8;
 228   2          if(x>120){x=0;y+=2;}
 229   2            j++;
 230   2        }
 231   1      }
 232          //显示汉字
 233          void OLED_ShowCHinese(unsigned char x,unsigned char y,unsigned char no)
 234          {               
 235   1        unsigned char t,adder=0;
 236   1        OLED_Set_Pos(x,y);  
 237   1          for(t=0;t<16;t++)
 238   1          {
 239   2              OLED_WR_Byte(Hzk[2*no][t],1);
 240   2              adder+=1;
C51 COMPILER V9.60.0.0   OLED                                                              03/12/2022 20:20:18 PAGE 5   

 241   2           }  
 242   1          OLED_Set_Pos(x,y+1);  
 243   1          for(t=0;t<16;t++)
 244   1            { 
 245   2              OLED_WR_Byte(Hzk[2*no+1][t],1);
 246   2              adder+=1;
 247   2            }         
 248   1      }
 249          //显示图片
 250          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 251          {   
 252   1       unsigned int j=0;
 253   1       unsigned char x,y;
 254   1        
 255   1        if(y1%8==0) y=y1/8;      
 256   1        else y=y1/8+1;
 257   1        for(y=y0;y<y1;y++)
 258   1        {
 259   2          OLED_Set_Pos(x0,y);
 260   2          for(x=x0;x<x1;x++)
 261   2            {      
 262   3              OLED_WR_Byte(BMP[j++],1);       
 263   3            }
 264   2        }
 265   1      } 
 266          //初始化SSD1306             
 267          void OLED_Init(void)
 268          {
 269   1        OLED_WR_Byte(0xAE,0);//--display off
 270   1        OLED_WR_Byte(0x00,0);//---set low column address
 271   1        OLED_WR_Byte(0x10,0);//---set high column address
 272   1        OLED_WR_Byte(0x40,0);//--set start line address  
 273   1        OLED_WR_Byte(0xB0,0);//--set page address
 274   1        OLED_WR_Byte(0x81,0); // contract control
 275   1        OLED_WR_Byte(0xFF,0);//--128   
 276   1        OLED_WR_Byte(0xA1,0);//set segment remap 
 277   1        OLED_WR_Byte(0xA6,0);//--normal / reverse
 278   1        OLED_WR_Byte(0xA8,0);//--set multiplex ratio(1 to 64)
 279   1        OLED_WR_Byte(0x3F,0);//--1/32 duty
 280   1        OLED_WR_Byte(0xC8,0);//Com scan direction
 281   1        OLED_WR_Byte(0xD3,0);//-set display offset
 282   1        OLED_WR_Byte(0x00,0);//
 283   1        
 284   1        OLED_WR_Byte(0xD5,0);//set osc division
 285   1        OLED_WR_Byte(0x80,0);//
 286   1        
 287   1        OLED_WR_Byte(0xD8,0);//set area color mode off
 288   1        OLED_WR_Byte(0x05,0);//
 289   1        
 290   1        OLED_WR_Byte(0xD9,0);//Set Pre-Charge Period
 291   1        OLED_WR_Byte(0xF1,0);//
 292   1        
 293   1        OLED_WR_Byte(0xDA,0);//set com pin configuartion
 294   1        OLED_WR_Byte(0x12,0);//
 295   1        
 296   1        OLED_WR_Byte(0xDB,0);//set Vcomh
 297   1        OLED_WR_Byte(0x30,0);//
 298   1        
 299   1        OLED_WR_Byte(0x8D,0);//set charge pump enable
 300   1        OLED_WR_Byte(0x14,0);//
 301   1        
C51 COMPILER V9.60.0.0   OLED                                                              03/12/2022 20:20:18 PAGE 6   

 302   1        OLED_WR_Byte(0xAF,0);//--turn on oled panel
 303   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1347    ----
   CONSTANT SIZE    =   2968    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      48
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
